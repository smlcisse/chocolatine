name: chocolatine

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  EXECUTABLES: my_ls
  MIRROR_URL: git@github.com:EpitechPromo2027/B-PSU-100-COT-1-1-myls-soumaila.idani.git

jobs:
  check_coding_style:
    container:
       image: ghcr.io/epitech/coding-style-checker:latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: coding_style_checker 
         run: check.sh $(pwd) $(pwd)
      - run: |
           check.sh $(pwd) $(pwd) 2>&1 | tee coding-style-reports.log
          if [ -s coding-style-reports.log ]; then
             cat coding-style-reports.log | while read -r line; do
             file=$(echo "$line" | cut -d ':' -f1)
             line_number=$(echo "$line" | cut -d ':' -f2)
             error_message=$(echo "$line" | cut -d ':' -f3-)
             echo "::error file=${file},line=${line_number}::${error_message}"
             done
             exit 1
          fi
  check_program_compilation:
    name: check_program_compilation
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    timeout-minutes: 2
    needs: check_repository_cleanliness
    steps:
      - uses: actions/checkout@v3
      - run: make
      - run: |
          make clean
          find -name "$EXECUTABLES" | grep -q . && exit 0 || exit 1
  run_tests:
    name : run_tests
    runs-on : ubuntu-latest
    container : epitechcontent/epitest-docker
    timeout-minutes: 2
    needs : check_program_compilation
    steps:
      - uses : actions/checkout@v3
      - run : make tests_run
  push_to_mirror:
    runs-on: ubuntu-latest
    needs : run_tests
    if : github.event.push
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{env.MIRROR_URL}}
          ssh_private_key:
            ${{secrets.GIT_SSH_PRIVATE_KEY}}
